plugins {
    id 'java'
    id 'io.quarkus'
    id 'com.adarshr.test-logger' version '3.2.0'
    id "org.kordamp.gradle.jandex" version "1.1.0"

    id "org.jetbrains.kotlin.jvm" version "2.0.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "2.0.21"

    id "io.gitlab.arturbosch.detekt" version "1.23.7"
    id "com.diffplug.spotless" version "6.25.0"
    id "jacoco"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-mongodb-panache'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-container-image-jib'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-grpc'

    implementation "io.quarkus:quarkus-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation 'io.quarkus:quarkus-test-mongodb'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-panache-mock'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'com.google.protobuf:protobuf-java-util:4.26.1'
}

configurations.all {
    // https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0#fixation-of-the-mockito-subclass-mockmaker
    exclude group: 'org.mockito', module: 'mockito-subclass'
}

group 'net.explorviz'
version '1.0-SNAPSHOT'

kotlin {
    jvmToolchain(21)
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDirs 'build/classes/java/quarkus-generated-sources/grpc', 'build/classes/java/quarkus-generated-sources/avdl'
        }
    }
}

// Regarding jandex dependency for each task
// https://github.com/kordamp/jandex-gradle-plugin/issues/9

tasks.named('compileTestJava') {
    dependsOn 'jandex'
}

tasks.named('test') {
    dependsOn 'jandex'
}

tasks.named('quarkusDependenciesBuild') {
    dependsOn 'jandex'
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/proto/**',
                    '**/main/**',
                    "**/SchemaRegistryClientProducer.*",
                    "**/ReadOnlyKeyValueStoreProducer.*"
            ])
        }))
    }
}

tasks.withType(JavaCompile).configureEach {
    // Turn on all javac warnings except classfile and processing, which produces many false-positives about annotations
    options.compilerArgs << "-Xlint:all" << "-Xlint:-classfile" << "-Xlint:-processing"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

// Needed by Mockito since closed Kotlin classes cannot be mocked
allOpen {
    annotation("jakarta.ws.rs.Path")
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("jakarta.persistence.Entity")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

spotless {
    kotlin {
        ktfmt().kotlinlangStyle().configure {
            it.setMaxWidth(120)
        }
    }
}
