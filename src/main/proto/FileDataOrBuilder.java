// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fileDataEvent.proto

// Protobuf Java Version: 3.25.1
package net.explorviz.code.proto;

public interface FileDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:FileData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string commitID = 1;</code>
   * @return The commitID.
   */
  java.lang.String getCommitID();
  /**
   * <code>string commitID = 1;</code>
   * @return The bytes for commitID.
   */
  com.google.protobuf.ByteString
      getCommitIDBytes();

  /**
   * <code>string fileName = 2;</code>
   * @return The fileName.
   */
  java.lang.String getFileName();
  /**
   * <code>string fileName = 2;</code>
   * @return The bytes for fileName.
   */
  com.google.protobuf.ByteString
      getFileNameBytes();

  /**
   * <code>string packageName = 3;</code>
   * @return The packageName.
   */
  java.lang.String getPackageName();
  /**
   * <code>string packageName = 3;</code>
   * @return The bytes for packageName.
   */
  com.google.protobuf.ByteString
      getPackageNameBytes();

  /**
   * <code>repeated string importName = 4;</code>
   * @return A list containing the importName.
   */
  java.util.List<java.lang.String>
      getImportNameList();
  /**
   * <code>repeated string importName = 4;</code>
   * @return The count of importName.
   */
  int getImportNameCount();
  /**
   * <code>repeated string importName = 4;</code>
   * @param index The index of the element to return.
   * @return The importName at the given index.
   */
  java.lang.String getImportName(int index);
  /**
   * <code>repeated string importName = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the importName at the given index.
   */
  com.google.protobuf.ByteString
      getImportNameBytes(int index);

  /**
   * <code>map&lt;string, .ClassData&gt; classData = 5;</code>
   */
  int getClassDataCount();
  /**
   * <code>map&lt;string, .ClassData&gt; classData = 5;</code>
   */
  boolean containsClassData(
      java.lang.String key);
  /**
   * Use {@link #getClassDataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, net.explorviz.code.proto.ClassData>
  getClassData();
  /**
   * <code>map&lt;string, .ClassData&gt; classData = 5;</code>
   */
  java.util.Map<java.lang.String, net.explorviz.code.proto.ClassData>
  getClassDataMap();
  /**
   * <code>map&lt;string, .ClassData&gt; classData = 5;</code>
   */
  /* nullable */
net.explorviz.code.proto.ClassData getClassDataOrDefault(
      java.lang.String key,
      /* nullable */
net.explorviz.code.proto.ClassData defaultValue);
  /**
   * <code>map&lt;string, .ClassData&gt; classData = 5;</code>
   */
  net.explorviz.code.proto.ClassData getClassDataOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; metric = 6;</code>
   */
  int getMetricCount();
  /**
   * <code>map&lt;string, string&gt; metric = 6;</code>
   */
  boolean containsMetric(
      java.lang.String key);
  /**
   * Use {@link #getMetricMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetric();
  /**
   * <code>map&lt;string, string&gt; metric = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetricMap();
  /**
   * <code>map&lt;string, string&gt; metric = 6;</code>
   */
  /* nullable */
java.lang.String getMetricOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; metric = 6;</code>
   */
  java.lang.String getMetricOrThrow(
      java.lang.String key);

  /**
   * <code>string author = 7;</code>
   * @return The author.
   */
  java.lang.String getAuthor();
  /**
   * <code>string author = 7;</code>
   * @return The bytes for author.
   */
  com.google.protobuf.ByteString
      getAuthorBytes();

  /**
   * <code>int32 modifiedLines = 8;</code>
   * @return The modifiedLines.
   */
  int getModifiedLines();

  /**
   * <code>int32 addedLines = 9;</code>
   * @return The addedLines.
   */
  int getAddedLines();

  /**
   * <code>int32 deletedLines = 10;</code>
   * @return The deletedLines.
   */
  int getDeletedLines();
}
