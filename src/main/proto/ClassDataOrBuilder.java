// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fileDataEvent.proto

// Protobuf Java Version: 3.25.1
package net.explorviz.code.proto;

public interface ClassDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ClassData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.ClassType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.ClassType type = 1;</code>
   * @return The type.
   */
  net.explorviz.code.proto.ClassType getType();

  /**
   * <code>repeated string modifier = 2;</code>
   * @return A list containing the modifier.
   */
  java.util.List<java.lang.String>
      getModifierList();
  /**
   * <code>repeated string modifier = 2;</code>
   * @return The count of modifier.
   */
  int getModifierCount();
  /**
   * <code>repeated string modifier = 2;</code>
   * @param index The index of the element to return.
   * @return The modifier at the given index.
   */
  java.lang.String getModifier(int index);
  /**
   * <code>repeated string modifier = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the modifier at the given index.
   */
  com.google.protobuf.ByteString
      getModifierBytes(int index);

  /**
   * <code>repeated string interface = 3;</code>
   * @return A list containing the interface.
   */
  java.util.List<java.lang.String>
      getInterfaceList();
  /**
   * <code>repeated string interface = 3;</code>
   * @return The count of interface.
   */
  int getInterfaceCount();
  /**
   * <code>repeated string interface = 3;</code>
   * @param index The index of the element to return.
   * @return The interface at the given index.
   */
  java.lang.String getInterface(int index);
  /**
   * <code>repeated string interface = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the interface at the given index.
   */
  com.google.protobuf.ByteString
      getInterfaceBytes(int index);

  /**
   * <code>repeated .FieldData field = 4;</code>
   */
  java.util.List<net.explorviz.code.proto.FieldData> 
      getFieldList();
  /**
   * <code>repeated .FieldData field = 4;</code>
   */
  net.explorviz.code.proto.FieldData getField(int index);
  /**
   * <code>repeated .FieldData field = 4;</code>
   */
  int getFieldCount();
  /**
   * <code>repeated .FieldData field = 4;</code>
   */
  java.util.List<? extends net.explorviz.code.proto.FieldDataOrBuilder> 
      getFieldOrBuilderList();
  /**
   * <code>repeated .FieldData field = 4;</code>
   */
  net.explorviz.code.proto.FieldDataOrBuilder getFieldOrBuilder(
      int index);

  /**
   * <code>repeated string innerClass = 5;</code>
   * @return A list containing the innerClass.
   */
  java.util.List<java.lang.String>
      getInnerClassList();
  /**
   * <code>repeated string innerClass = 5;</code>
   * @return The count of innerClass.
   */
  int getInnerClassCount();
  /**
   * <code>repeated string innerClass = 5;</code>
   * @param index The index of the element to return.
   * @return The innerClass at the given index.
   */
  java.lang.String getInnerClass(int index);
  /**
   * <code>repeated string innerClass = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the innerClass at the given index.
   */
  com.google.protobuf.ByteString
      getInnerClassBytes(int index);

  /**
   * <code>repeated .MethodData constructor = 6;</code>
   */
  java.util.List<net.explorviz.code.proto.MethodData> 
      getConstructorList();
  /**
   * <code>repeated .MethodData constructor = 6;</code>
   */
  net.explorviz.code.proto.MethodData getConstructor(int index);
  /**
   * <code>repeated .MethodData constructor = 6;</code>
   */
  int getConstructorCount();
  /**
   * <code>repeated .MethodData constructor = 6;</code>
   */
  java.util.List<? extends net.explorviz.code.proto.MethodDataOrBuilder> 
      getConstructorOrBuilderList();
  /**
   * <code>repeated .MethodData constructor = 6;</code>
   */
  net.explorviz.code.proto.MethodDataOrBuilder getConstructorOrBuilder(
      int index);

  /**
   * <code>map&lt;string, .MethodData&gt; methodData = 7;</code>
   */
  int getMethodDataCount();
  /**
   * <code>map&lt;string, .MethodData&gt; methodData = 7;</code>
   */
  boolean containsMethodData(
      java.lang.String key);
  /**
   * Use {@link #getMethodDataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, net.explorviz.code.proto.MethodData>
  getMethodData();
  /**
   * <code>map&lt;string, .MethodData&gt; methodData = 7;</code>
   */
  java.util.Map<java.lang.String, net.explorviz.code.proto.MethodData>
  getMethodDataMap();
  /**
   * <code>map&lt;string, .MethodData&gt; methodData = 7;</code>
   */
  /* nullable */
net.explorviz.code.proto.MethodData getMethodDataOrDefault(
      java.lang.String key,
      /* nullable */
net.explorviz.code.proto.MethodData defaultValue);
  /**
   * <code>map&lt;string, .MethodData&gt; methodData = 7;</code>
   */
  net.explorviz.code.proto.MethodData getMethodDataOrThrow(
      java.lang.String key);

  /**
   * <code>repeated string variable = 8;</code>
   * @return A list containing the variable.
   */
  java.util.List<java.lang.String>
      getVariableList();
  /**
   * <code>repeated string variable = 8;</code>
   * @return The count of variable.
   */
  int getVariableCount();
  /**
   * <code>repeated string variable = 8;</code>
   * @param index The index of the element to return.
   * @return The variable at the given index.
   */
  java.lang.String getVariable(int index);
  /**
   * <code>repeated string variable = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the variable at the given index.
   */
  com.google.protobuf.ByteString
      getVariableBytes(int index);

  /**
   * <code>string superClass = 9;</code>
   * @return The superClass.
   */
  java.lang.String getSuperClass();
  /**
   * <code>string superClass = 9;</code>
   * @return The bytes for superClass.
   */
  com.google.protobuf.ByteString
      getSuperClassBytes();

  /**
   * <code>repeated string enumConstant = 10;</code>
   * @return A list containing the enumConstant.
   */
  java.util.List<java.lang.String>
      getEnumConstantList();
  /**
   * <code>repeated string enumConstant = 10;</code>
   * @return The count of enumConstant.
   */
  int getEnumConstantCount();
  /**
   * <code>repeated string enumConstant = 10;</code>
   * @param index The index of the element to return.
   * @return The enumConstant at the given index.
   */
  java.lang.String getEnumConstant(int index);
  /**
   * <code>repeated string enumConstant = 10;</code>
   * @param index The index of the value to return.
   * @return The bytes of the enumConstant at the given index.
   */
  com.google.protobuf.ByteString
      getEnumConstantBytes(int index);

  /**
   * <code>repeated string annotation = 11;</code>
   * @return A list containing the annotation.
   */
  java.util.List<java.lang.String>
      getAnnotationList();
  /**
   * <code>repeated string annotation = 11;</code>
   * @return The count of annotation.
   */
  int getAnnotationCount();
  /**
   * <code>repeated string annotation = 11;</code>
   * @param index The index of the element to return.
   * @return The annotation at the given index.
   */
  java.lang.String getAnnotation(int index);
  /**
   * <code>repeated string annotation = 11;</code>
   * @param index The index of the value to return.
   * @return The bytes of the annotation at the given index.
   */
  com.google.protobuf.ByteString
      getAnnotationBytes(int index);

  /**
   * <code>map&lt;string, string&gt; metric = 12;</code>
   */
  int getMetricCount();
  /**
   * <code>map&lt;string, string&gt; metric = 12;</code>
   */
  boolean containsMetric(
      java.lang.String key);
  /**
   * Use {@link #getMetricMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetric();
  /**
   * <code>map&lt;string, string&gt; metric = 12;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetricMap();
  /**
   * <code>map&lt;string, string&gt; metric = 12;</code>
   */
  /* nullable */
java.lang.String getMetricOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; metric = 12;</code>
   */
  java.lang.String getMetricOrThrow(
      java.lang.String key);
}
